{"version":3,"sources":["components/square/square.js","assets/happygroundhog.png","components/modal/modal.js","utils/getPosition.js","utils/utils.js","App.js","hooks/useActions.js","hooks/useModal.js","reportWebVitals.js","index.js"],"names":["Square","type","handleClick","index","isDisabled","disabled","id","onClick","className","Modal","closeModal","restartGame","src","groundHog","alt","getPositionChanges","newPosition","BOARD","App","useState","maze","setMaze","count","setCount","lastCross","setLastCross","changePosition","changes","newMaze","map","square","forEach","position","newCount","autoMove","console","log","indexOf","nextPosition","Math","random","lastIndexOf","crosses","isAvaliable","restart","useActions","modal","setModal","openModal","useModal","handleMove","event","preventDefault","Number","target","steps","element","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f2cd020.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './square.css'\r\n\r\nfunction Square ({ type, handleClick, index }) {\r\n    const isDisabled = type === 'wall' || type === 'path' || type === 'passed'\r\n    return (\r\n        <button disabled={isDisabled} id={index} onClick={handleClick} className={type} >\r\n            \r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nexport default Square","export default __webpack_public_path__ + \"static/media/happygroundhog.9ce35686.png\";","import React from 'react'\r\nimport groundHog from '../../assets/happygroundhog.png'\r\n\r\n// styles \r\nimport './modal.css'\r\n\r\nfunction Modal ({ closeModal, restartGame}) {\r\n    const handleRestart = () => {\r\n        restartGame()\r\n        closeModal()\r\n    }\r\n    return (\r\n        <div className='modal-background'>\r\n            <section className='modal-content'>\r\n                <h2 className='modal-text' >Congratulations! You won</h2>\r\n                <img src={groundHog} alt='Happy groundhog'/>\r\n                <div className='button-container'>\r\n                <button onClick={handleRestart} >RESTART</button>\r\n                <button onClick={closeModal} >CLOSE</button>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal","export const getPositionChanges = (newPosition) => {\r\n    return [\r\n        newPosition - 12,\r\n        newPosition + 12,\r\n        newPosition + 1,\r\n        newPosition - 1\r\n    ]\r\n}","export const BOARD = [\r\n    // row 1\r\n    'wall',\r\n    'avatar',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    // row 2\r\n    'wall',\r\n    'avaliable',\r\n    'wall',\r\n    'path',\r\n    'path',\r\n    'path',\r\n    'wall',\r\n    'path',\r\n    'path',\r\n    'path',\r\n    'path',\r\n    'wall',\r\n    // row 3\r\n    'wall',\r\n    'path',\r\n    'path',\r\n    'path',\r\n    'wall',\r\n    'path',\r\n    'wall',\r\n    'path',\r\n    'wall',\r\n    'path',\r\n    'wall',\r\n    'wall',\r\n    // row 4\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'path',\r\n    'path',\r\n    'path',\r\n    'wall',\r\n    'path',\r\n    'path',\r\n    'wall',\r\n    // row 5\r\n    'wall',\r\n    'path',\r\n    'path',\r\n    'path',\r\n    'path',\r\n    'path',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'path',\r\n    'wall',\r\n    // row 6\r\n    'wall',\r\n    'path',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'path',\r\n    'path',\r\n    'path',\r\n    'path',\r\n    'wall',\r\n    // row 7\r\n    'wall',\r\n    'path',\r\n    'path',\r\n    'path',\r\n    'path',\r\n    'path',\r\n    'wall',\r\n    'path',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    // row 8\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'path',\r\n    'wall',\r\n    'path',\r\n    'wall',\r\n    'path',\r\n    'path',\r\n    'path',\r\n    'path',\r\n    'wall',\r\n    // row 9\r\n    'wall',\r\n    'path',\r\n    'path',\r\n    'path',\r\n    'wall',\r\n    'path',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    // row 10\r\n    'wall',\r\n    'wall',\r\n    'path',\r\n    'wall',\r\n    'wall',\r\n    'path',\r\n    'wall',\r\n    'path',\r\n    'path',\r\n    'path',\r\n    'wall',\r\n    'wall',\r\n    // row 11\r\n    'wall',\r\n    'path',\r\n    'path',\r\n    'path',\r\n    'wall',\r\n    'path',\r\n    'path',\r\n    'path',\r\n    'wall',\r\n    'path',\r\n    'path',\r\n    'path',\r\n    // row 12\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n    'wall',\r\n]","import './App.css'\n\n// components\nimport Square from './components/square/square'\nimport Modal from './components/modal/modal'\n\n// hooks\nimport { useActions } from './hooks/useActions'\nimport { useModal } from './hooks/useModal'\n\nfunction App() {\n  const { maze, count, changePosition, autoMove, restart } = useActions()\n  const { modal, openModal, closeModal } = useModal()\n\n  const handleMove = (event) => {\n    event.preventDefault()\n    const newPosition = Number(event.target.id)\n    const steps = changePosition(newPosition)\n    if(newPosition === 131) openModal(steps)\n  }\n  return (\n    <main className='App'>\n      {\n        modal ? <Modal closeModal={closeModal} restartGame={restart} /> : null\n      }\n      <header>\n        <h1>Maze Game!</h1> \n        <button onClick={autoMove} >Auto solve</button>\n        <span>moves: {count}</span>\n      </header>\n      <section className='container'>\n        {\n          maze.map((element, index) => {\n            return <Square handleClick={handleMove} key={index} index={index} type={element} />\n          })\n        }\n      </section>\n      <footer>Made with &#128147; by <a href='https://github.com/edabrito7'>edabrito7</a> </footer>\n    </main>\n  );\n}\n\nexport default App;\n","import { useState } from 'react'\r\nimport { getPositionChanges } from '../utils/getPosition'\r\nimport { BOARD } from '../utils/utils'\r\n\r\n\r\nexport function useActions () {\r\n    const [maze, setMaze] = useState(BOARD)\r\n    const [count, setCount] = useState(0)\r\n    const [lastCross, setLastCross] = useState(0)\r\n\r\n    const changePosition = (newPosition) => {\r\n        const changes = getPositionChanges(newPosition)\r\n       const newMaze = maze.map((square) => {\r\n            if (square === 'avaliable' || square === 'avatar') return 'passed'\r\n            return square\r\n       })\r\n       changes.forEach((position, index) => {\r\n            if (maze[position] === 'wall' || position > 143 || newMaze[position] === 'passed') return \r\n            newMaze[position] = 'avaliable'\r\n       })\r\n       newMaze[newPosition] = 'avatar'\r\n       setMaze(newMaze)\r\n       const newCount = count + 1\r\n       setCount(newCount)\r\n       return newCount\r\n    }\r\n\r\n    const restart = () => {\r\n        setMaze(BOARD)\r\n        setCount(0)\r\n    }\r\n\r\n    // need work\r\n    const autoMove = () => {\r\n        console.log('I am here')\r\n        const currentPosition = maze.indexOf('avatar') \r\n        const nextPosition = Math.random() > 0.5 ? maze.lastIndexOf('avaliable') : maze.indexOf('avaliable') // random direction\r\n        const changes =   getPositionChanges(nextPosition)\r\n        const newMaze = maze.map((square) => {\r\n            if (square === 'avaliable' || square === 'avatar') return 'passed'\r\n            return square\r\n       })\r\n       let crosses = 0\r\n        changes.forEach((position) => {\r\n            if (maze[position] === 'wall' || position > 143 || newMaze[position] === 'passed') return \r\n            newMaze[position] = 'avaliable'\r\n            crosses += 1\r\n        })\r\n        if (crosses > 1) {\r\n            setLastCross(nextPosition) \r\n        }\r\n        newMaze[nextPosition] = 'avatar'\r\n        if (nextPosition !== 131) {\r\n            const isAvaliable = newMaze.indexOf('avaliable')\r\n            isAvaliable !== -1   ? newMaze[nextPosition] = 'avatar' : newMaze[lastCross] = 'avatar'\r\n            if (isAvaliable === -1 && nextPosition !== 131) {\r\n                const newChanges =   getPositionChanges(lastCross)\r\n                newChanges.forEach((position) => {\r\n                    if (maze[position] === 'wall' || position > 143) return \r\n                    newMaze[position] = 'avaliable'\r\n                    crosses += 1\r\n                })\r\n            }\r\n        }\r\n        setMaze(newMaze)\r\n        setCount(count + 1)\r\n    } \r\n\r\n    \r\n\r\n    return {\r\n        maze,\r\n        count,\r\n        changePosition,\r\n        autoMove,\r\n        restart\r\n    }\r\n}\r\n","import { useState } from 'react'\r\n\r\nexport function useModal () {\r\n    const [modal, setModal] = useState(false)\r\n\r\n    const openModal = (count) => {\r\n        setModal(true)\r\n        console.log(count)\r\n        // here send count to API\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModal(false)\r\n    }\r\n\r\n    return {\r\n        modal,\r\n        openModal,\r\n        closeModal\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}